
==================== FINAL INTERFACE ====================
2018-12-13 09:07:49.882907647 UTC

interface topmovies-0.1.0.0-HqDPykmlaSdETrGbngTKrW:Database 8044
  interface hash: 1984fab1e15b4ba31a62c4e42788a109
  ABI hash: 4935cf3ae640a23fccb7bd0fc55dba63
  export-list hash: edf1172b2c8fef6e01bb8ad3b182cbfe
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1f596daf84c7527444ae092b33472386
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Database.dbConnect
  Database.dropDatabase
  Database.insertOne
  Database.insertThree
  Database.insertTwo
  Database.movTable_starTable
  Database.movieTable
  Database.populateMovies
  Database.r
  Database.setupDatabase
  Database.starringTable
module dependencies: DownloadMovies MovieDataType ParseResponse
package dependencies: HDBC-2.4.0.2 HDBC-sqlite3-2.3.3.1
                      aeson-1.3.1.1 array-0.5.2.0 asn1-encoding-0.9.5 asn1-parse-0.9.4
                      asn1-types-0.3.2 async-2.2.1 attoparsec-0.13.2.2 base-4.11.1.0
                      base-compat-0.10.5 basement-0.0.8 binary-0.8.5.1
                      blaze-builder-0.4.1.0 bytestring-0.10.8.2 case-insensitive-1.2.0.11
                      cereal-0.5.7.0 conduit-1.3.1 connection-0.2.8 containers-0.5.11.0
                      convertible-1.1.1.0 cookie-0.4.4 cryptonite-0.25
                      data-default-class-0.1.2.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.5 exceptions-0.10.0 filepath-1.4.2 ghc-boot-th-8.4.4
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 hourglass-0.2.12
                      http-client-0.5.13.1 http-client-tls-0.3.5.3 http-conduit-2.3.2
                      http-types-0.12.2 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      memory-0.14.18 mtl-2.2.2 network-2.6.3.6 network-uri-2.6.1.0
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0 pem-0.2.4
                      primitive-0.6.3.0 random-1.1 resourcet-1.2.2 scientific-0.3.6.2
                      socks-0.5.6 stm-2.4.5.1 streaming-commons-0.2.1.0 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 tls-1.4.1 transformers-0.5.5.0
                      unix-2.7.2.2 unliftio-core-0.1.2.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vector-0.12.0.1 x509-1.7.5
                      x509-store-1.6.7 x509-system-1.6.6 x509-validation-1.6.11
                      zlib-0.6.2
orphans: http-client-0.5.13.1:Network.HTTP.Client.Request
         basement-0.0.8:Basement.UArray.Base basement-0.0.8:Basement.Block
         network-2.6.3.6:Network.Socket stm-2.4.5.1:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         convertible-1.1.1.0:Data.Convertible.Instances.C
         convertible-1.1.1.0:Data.Convertible.Instances.Map
         convertible-1.1.1.0:Data.Convertible.Instances.Text
         convertible-1.1.1.0:Data.Convertible.Instances.Time
         convertible-1.1.1.0:Data.Convertible.Instances.Num
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         basement-0.0.8:Basement.Block.Base basement-0.0.8:Basement.Monad
                         basement-0.0.8:Basement.MutableBuilder basement-0.0.8:Basement.Nat
                         basement-0.0.8:Basement.NonEmpty
                         basement-0.0.8:Basement.Numerical.Subtractive
                         basement-0.0.8:Basement.PrimType basement-0.0.8:Basement.String
                         basement-0.0.8:Basement.String.Encoding.ASCII7
                         basement-0.0.8:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.8:Basement.String.Encoding.UTF16
                         basement-0.0.8:Basement.String.Encoding.UTF32
                         basement-0.0.8:Basement.Types.OffsetSize
                         basement-0.0.8:Basement.UArray.Base
                         basement-0.0.8:Basement.UTF8.Base
                         conduit-1.3.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.5:Data.DList
                         ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         http-client-0.5.13.1:Network.HTTP.Client
                         network-uri-2.6.1.0:Network.URI
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         topmovies-0.1.0.0-HqDPykmlaSdETrGbngTKrW:MovieDataType
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  HDBC-2.4.0.2:Database.HDBC 150013f2df2040efdbef3e6925dc046e
import  -/  HDBC-2.4.0.2:Database.HDBC.SqlValue 9bf1913c3a0c08b01db3a68b06b578ad
import  -/  HDBC-2.4.0.2:Database.HDBC.Statement da3bc00d948e17b569296286ee74c9ab
import  -/  HDBC-2.4.0.2:Database.HDBC.Types c6c579e1cb14bdcf9f4b35f0ce6bef4b
import  -/  HDBC-sqlite3-2.3.3.1:Database.HDBC.Sqlite3 bd578a653f42f729956b3d1212d1b114
import  -/  HDBC-sqlite3-2.3.3.1:Database.HDBC.Sqlite3.Connection 86e7ec3733b0665ef7808f20d99c7042
import  -/  HDBC-sqlite3-2.3.3.1:Database.HDBC.Sqlite3.ConnectionImpl 39151418dcf5788afe4d5337f809531d
import  -/  base-4.11.1.0:Control.Exception 3d8e6cda20877f889f07bc7c0f5cac36
import  -/  base-4.11.1.0:Control.Exception.Base 6b3335161fe9c47efeac02d92d6dc212
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO 40b9aff18a55c99eb253f9a43ff9b627
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  DownloadMovies 2252451e907dc40ef79fa54e3ca5008d
  exports: 86b35fe2c62f46d65097d3df8d969130
  readMovies 3e3cdf80771084c197fd7a7a46ccf9f8
import  -/  MovieDataType 1220c84b655e5e6a9388c6c23260ae6c
  exports: 9a516822eea0563d11606a40129e72d9
  director e81709cca3321590f92169a4a102a621
  name e81709cca3321590f92169a4a102a621
  rank e81709cca3321590f92169a4a102a621
  rating e81709cca3321590f92169a4a102a621
  starring e81709cca3321590f92169a4a102a621
  year e81709cca3321590f92169a4a102a621
import  -/  ParseResponse aaf71d872dcc26cb4aeeb01eec298519
  exports: b3e35cafd03918a66042cf18fae1ee89
fd5c06f7bb21b9b1e013636462788d8d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Database.$trModule3
                   Database.$trModule1) -}
bba5591537af6257f7738c165e3c49e9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Database.$trModule2) -}
30603762c26359e46ef97c3bbbc36d19
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Database"#) -}
bb29daf23c9f712a192ce116ad534246
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Database.$trModule4) -}
5d2bcd4b79f7659c3ab9c18d22dda0d7
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("topmovies-0.1.0.0-HqDPykmlaSdETrGbngTKrW"#) -}
1754ebada918271211cadc04fd4cd436
  dbConnect ::
    GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection
  {- Unfolding: (Database.HDBC.Sqlite3.Connection.genericConnect
                   Database.HDBC.Sqlite3.Connection.connectSqlite1
                     `cast`
                   (<GHC.Base.String>_R
                    ->_R <Foreign.C.String.CString
                          -> GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Database.HDBC.Sqlite3.ConnectionImpl.Connection>_R))
                   Database.dbConnect1) -}
672a77663f26e0ec343cf06486bbb5c2
  dbConnect1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Database.dbConnect2) -}
6a1b9401be1155e7a2128641c51fed19
  dbConnect2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DB.db"#) -}
d7c5740fb7a4fe421d3109c1ed86b22e
  dropDatabase ::
    GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Database.dropDatabase1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <Database.HDBC.Sqlite3.ConnectionImpl.Connection>_R)) -}
ba2de07349c47f3ee9eb016ef4c663c6
  dropDatabase1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.HDBC.Sqlite3.ConnectionImpl.Connection #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Database.dbConnect
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Database.HDBC.Sqlite3.ConnectionImpl.Connection>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Database.HDBC.Sqlite3.ConnectionImpl.Connection ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 case (ds5
                         Database.dropDatabase6
                         (GHC.Types.[] @ Database.HDBC.SqlValue.SqlValue))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)
                        ipv of ds18 { (#,#) ipv2 ipv3 ->
                 case (ds5
                         Database.dropDatabase4
                         (GHC.Types.[] @ Database.HDBC.SqlValue.SqlValue))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)
                        ipv2 of ds19 { (#,#) ipv4 ipv5 ->
                 case (ds5
                         Database.dropDatabase2
                         (GHC.Types.[] @ Database.HDBC.SqlValue.SqlValue))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)
                        ipv4 of ds20 { (#,#) ipv6 ipv7 ->
                 case ds3 `cast` (GHC.Types.N:IO[0] <()>_R)
                        ipv6 of ds21 { (#,#) ipv8 ipv9 ->
                 (# ipv8, wild #) } } } } } }) -}
a4ddcebe69cd047cb3a9cd1c1632e3e6
  dropDatabase2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Database.dropDatabase3) -}
b678358541b8375d62db1bdbc383be8e
  dropDatabase3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("DROP TABLE IF EXISTS movTable_starTable"#) -}
5e6770f0725b124eb49bb1212c808209
  dropDatabase4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Database.dropDatabase5) -}
400e65281ca0b724046d98a051c4780c
  dropDatabase5 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("DROP TABLE IF EXISTS starringTable"#) -}
c79ba6a3ac90b517388b5fb10ca99b4e
  dropDatabase6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Database.dropDatabase7) -}
f1a83a0bd68188d87f913564e2d3d91c
  dropDatabase7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DROP TABLE IF EXISTS movieTable"#) -}
60667b613cb8945b48dffce440afc03b
  insertOne :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Database.insertOne1) -}
5b02d98744d7a74ccc4c688e7eb27298
  insertOne1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("INSERT OR REPLACE INTO movieTable(rank,name,year,rating,dirFName,dirLName)VALUES (?,?,?,?,?,?)"#) -}
19d2a944e9e7481b6b6b091d29edeec3
  insertThree :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Database.insertThree1) -}
de64da72a2ea19b95e5afce5f637992d
  insertThree1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("INSERT OR REPLACE INTO movTable_starTable (movieID, starringID) VALUES (?,?)"#) -}
c848c8c902f2c0226a05e48f4801a260
  insertTwo :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Database.insertTwo1) -}
44dc9f65cec9c3efae4b76433c3ac52f
  insertTwo1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("INSERT OR REPLACE INTO starringTable (starFName, starLName) VALUES (?,?)"#) -}
1e1af941ebebbd17cc9f4a7f5368043e
  movTable_starTable :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Database.movTable_starTable1) -}
5043661d0deae91f8cb626e3f9e3990e
  movTable_starTable1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("CREATE TABLE IF NOT EXISTS movTable_starTable (movieID INTEGER, starringID INTEGER, FOREIGN KEY(movieID) REFERENCES movieTable(id), FOREIGN KEY(starringID) REFERENCES starringTable(id) )"#) -}
8a0b60c26c1d4f24d88f368c61a4328a
  movieTable :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# Database.movieTable1) -}
3cfbd7bb99f1a4e4550875a1425299a3
  movieTable1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("CREATE TABLE IF NOT EXISTS movieTable (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,rank INTEGER NOT NULL UNIQUE ,name VARCHAR(80) NOT NULL ,year INTEGER NOT NULL ,rating INTEGER NOT NULL,dirFName VARCHAR(40) NOT NULL,dirLName VARCHAR(40) NOT NULL);"#) -}
e4397bcbf0865583126617ddd6c74418
  populateMovies :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Database.populateMovies1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
66c5d1c0b441e62dd80190b87975b321
  populateMovies1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
4d8f6302144cc180c83f43fa24fd36e1
  r ::
    (Database.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Database.r1
                  `cast`
                (forall (a :: <*>_N).
                 <Database.HDBC.Sqlite3.ConnectionImpl.Connection
                  -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
7075d5ad46a05726d567ad7a6c7447e8
  r1 ::
    (Database.HDBC.Sqlite3.ConnectionImpl.Connection -> GHC.Types.IO a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 2,
     Unfolding: (\ @ a ->
                 Control.Exception.Base.bracket1
                   @ Database.HDBC.Sqlite3.ConnectionImpl.Connection
                   @ ()
                   @ a
                   Database.dbConnect
                   Database.HDBC.Sqlite3.ConnectionImpl.disconnect) -}
8fcff68d293529b1fab2bb6f795ecfc1
  setupDatabase ::
    GHC.Types.IO Database.HDBC.Sqlite3.ConnectionImpl.Connection
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Database.setupDatabase1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <Database.HDBC.Sqlite3.ConnectionImpl.Connection>_R)) -}
ece110681c6a940708164e6d325853e3
  setupDatabase1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.HDBC.Sqlite3.ConnectionImpl.Connection #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Database.dbConnect
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Database.HDBC.Sqlite3.ConnectionImpl.Connection>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Database.setupDatabase2
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Database.HDBC.Sqlite3.ConnectionImpl.Connection ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 case (ds6
                         Database.movieTable
                         (GHC.Types.[] @ Database.HDBC.SqlValue.SqlValue))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)
                        ipv2 of ds19 { (#,#) ipv4 ipv5 ->
                 case (ds6
                         Database.starringTable
                         (GHC.Types.[] @ Database.HDBC.SqlValue.SqlValue))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)
                        ipv4 of ds20 { (#,#) ipv6 ipv7 ->
                 case (ds6
                         Database.movTable_starTable
                         (GHC.Types.[] @ Database.HDBC.SqlValue.SqlValue))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Integer.Type.Integer>_R)
                        ipv6 of ds21 { (#,#) ipv8 ipv9 ->
                 case ds4 `cast` (GHC.Types.N:IO[0] <()>_R)
                        ipv8 of ds22 { (#,#) ipv10 ipv11 ->
                 (# ipv10, wild #) } } } } } } }) -}
fa3427fde1194814b24fe1003993b5ec
  setupDatabase2 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Database.setupDatabase3) -}
4435a6b2256fd773a3a472cc7a8eefb4
  setupDatabase3 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   (GHC.CString.unpackCString# Database.setupDatabase4)
                   GHC.Show.$fShow[]1) -}
376f32e39db84e31d64e2c84e4d0b597
  setupDatabase4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Connection Successful"#) -}
d549415f6b29f8ac864880e30b2f854d
  starringTable :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   Database.starringTable1) -}
a8b779e25f44833b1193ac303ecd5772
  starringTable1 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("CREATE TABLE IF NOT EXISTS starringTable (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, starFName VARCHAR(40) NOT NULL, starLName VARCHAR(40) NOT NULL)"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

